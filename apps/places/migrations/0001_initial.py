# Generated by Django 4.2.7 on 2023-11-15 02:39

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import utils.models
import utils.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Solicitudes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('folio', models.CharField(editable=False, max_length=25, null=True, unique=True)),
                ('fecha_reg', models.DateTimeField(auto_now_add=True)),
                ('fecha_mod', models.DateTimeField(auto_now=True)),
                ('activo', models.BooleanField(default=True, editable=False)),
                ('regimen_fiscal', models.CharField(choices=[('moral', 'Persona Moral'), ('fisica', 'Persona Física')], max_length=100, verbose_name='Régimen fiscal')),
                ('rfc_txt', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9]*$', 'Ingrese un RFC correcto'), django.core.validators.MinLengthValidator(12)], verbose_name='RFC')),
                ('nombre_persona', models.CharField(max_length=100, verbose_name='Nombre de la Persona Física o del Representante Legal')),
                ('nombre_comercial', models.CharField(max_length=100, verbose_name='Nombre Comercial o Razón Social')),
                ('constancia_fiscal', models.FileField(upload_to=utils.models.UploadTo('CONSTANCIA_FISCAL', 'solicitudes'), validators=[utils.validators.validate_pdf_file], verbose_name='Constancia de Situación Fiscal')),
                ('comprobante_domicilio', models.FileField(upload_to=utils.models.UploadTo('COMPROBANTE_DOMICILIO', 'solicitudes'), validators=[utils.validators.validate_pdf_file], verbose_name='Comprobante de Domicilio')),
                ('acta_constitutiva', models.FileField(upload_to=utils.models.UploadTo('ACTA_CONSTITUTIVA', 'solicitudes'), validators=[utils.validators.validate_pdf_file], verbose_name='Acta Constitutiva')),
                ('poder_notarial', models.FileField(upload_to=utils.models.UploadTo('PODER_NOTARIAL', 'solicitudes'), validators=[utils.validators.validate_pdf_file], verbose_name='Poder Notarial')),
                ('identificacion', models.FileField(upload_to=utils.models.UploadTo('IDENTIFICACION_OFICIAL', 'solicitudes'), validators=[utils.validators.validate_pdf_file], verbose_name='Identificación Oficial')),
                ('calle', models.CharField(max_length=200, verbose_name='Calle')),
                ('no_calle', models.CharField(max_length=6, verbose_name='Calle')),
                ('colonia', models.CharField(max_length=200, verbose_name='Colonia')),
                ('codigo_postal', models.CharField(max_length=5, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.RegexValidator('^[0-9]*$', 'Ingrese un código postal correcto')], verbose_name='Código Postal')),
                ('municipio', models.CharField(max_length=200, verbose_name='Municipio')),
                ('estado', models.CharField(choices=[('tabasco', 'Tabasco')], max_length=200, verbose_name='Estado')),
                ('usuario', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='solicitudes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
